#!/bin/sh
if [ $(uname -s) = Darwin ]; then
	MAFIA_DIR="${HOME}/Library/Application Support/KoLmafia"
else
	MAFIA_DIR="${HOME}/.kolmafia"
fi
ROOT_DIR=${MAFIA_DIR}/program
VERSION_FILE=${MAFIA_DIR}/version
URL=http://ci.kolmafia.us/job/Kolmafia/lastSuccessfulBuild/artifact/dist/
COMMITURL=http://ci.kolmafia.us/job/Kolmafia/lastSuccessfulBuild/changes
if [ -f $VERSION_FILE ]; then
	version_number_old=$(sed -n 1p < $VERSION_FILE)
	commitmsg_old=$(sed -n 2p < $VERSION_FILE)
fi

# colour names
bright_red=$(printf "\033[31m\033[1m")
bright_green=$(printf "\033[32m\033[1m")
bright_yellow=$(printf "\033[33m\033[1m")
bright_blue=$(printf "\033[34m\033[1m")
bright_magenta=$(printf "\033[35m\033[1m")
bright_cyan=$(printf "\033[36m\033[1m")
red=$(printf "\033[31m")
green=$(printf "\033[32m")
yellow=$(printf "\033[33m")
blue=$(printf "\033[34m")
magenta=$(printf "\033[35m")
cyan=$(printf "\033[36m")
reverse=$(printf "\033[7m")
normal=$(printf "\033[0m")
underline=$(printf "\033[4m")

# Check for a java installation
command -v java >/dev/null 2>&1 || {
	printf "${reverse}${bright_red}ERROR${normal} -- You do not have java installed, or it is not in your \$PATH.\n"
	printf "Please install it using your system's package manager.  The following command\n"
	printf "lines are for common systems:\n"
	printf "OSX:            ${reverse}brew install java${normal}\n"
	printf "Ubuntu:         ${reverse}apt-get install openjdk-8-jdk${normal}\n"
	printf "Debian:         ${reverse}apt-get install java${normal}\n"
	printf "Fedora <22:     ${reverse}yum install java${normal}\n"
	printf "Fedora >=22:    ${reverse}dnf install java${normal}\n"
	printf "Most BSDs:      ${reverse}pkg install java${normal}\n"
	exit 1
}

# Pretty colours
yes(){
	printf "${bright_green}yes${normal}\n"
}
no(){
	printf "${bright_red}no${normal}\n"
}
#actually done
finished(){
	printf "${bright_magenta}done!${normal}\n"
}
check(){
	printf "${bright_cyan}Checking${normal} if ${bright_yellow}$@${normal}..."
}


# It's probably safe to just assume that if the dirs are there, the app is
# installed.  Yes, someone could tinker with this, but this is PROBABLY
# reasonable.
check "${normal}${magenta}${underline}KoLMafia${normal} ${bright_yellow}is installed"
if [ -d $MAFIA_DIR ]; then
	yes
	mafia_install=true
else
	no
	mafia_install=false
fi

check "Mafia autoupdater is installed"
if [ -d $ROOT_DIR ]; then
	yes
	new_install=false
else
	no
	new_install=true
fi

if $new_install; then
	mkdir -p $ROOT_DIR
fi


check "the previous session was interrupted"
if [ -f $ROOT_DIR/*new ]; then
	# don't use yes() because we want it red.  Same for "no"
	printf "${bright_red}yes\n"
	rm -f $ROOT_DIR/$version_number.new
	session_interrupted=true
else
	printf "${bright_green}no\n"
	session_interrupted=false
fi

if $new_install; then
	printf "${bright_cyan}Downloading${normal} ${magenta}${underline}KoLMafia${normal} for the ${bright_yellow}first time${normal}..."
else
	if $session_interrupted; then
		printf "${bright_cyan}Downloading${normal} ${magenta}${underline}KoLMafia${normal} ${bright_yellow}again${normal}..."
	else
		check "a new version is available"
	fi
fi


commitmsg=$(curl ${COMMITURL} 2>/dev/null | sed -n 14p | cut -c 13- | tr -d "\n" | sed "s/\&amp;/\&/g" | sed "s/\&#039;/'/g" )
getcommit() {
	if ( ${new_install} || ( ! ${new_version} ) ); then
		printf "${green}Revision${normal} ${red}#${version_number},${normal} ${blue}\"${underline}${commitmsg}${normal}${blue}\"${normal}\n"
	else
		printf "${green}Fast-forward${normal} ${red}$((${version_number}-${version_number_old}))${normal} ${yellow}commits${normal}: ${red}#${version_number_old}${normal} ${blue}(${underline}${commitmsg_old}${normal}${blue})${normal} to ${red}#${version_number}${normal} ${blue}(${underline}${commitmsg}${normal}${blue})${normal}\n"
	fi
}

# Short explanation: fetch builds.kolmafia.us, get line 11 (which is the
# one with the download links), strip away everything before the URL
# (chop off the first 427 chars), then chop everything after the URL (get
# only the first 18 chars).
download=$URL/$(curl $URL 2>/dev/null|sed -n 11p|cut -c 427-|cut -c 1-18)
version_number=$(echo $download|cut -c 80-|cut -c 1-5)
if [ ! $version_number = $version_number_old ]; then
	new_version=true
else
	new_version=false
fi


if ( $new_install || $session_interrupted ); then
	new_file=true
	curl $download > $ROOT_DIR/$version_number.new 2>/dev/null
	finished
else
	if $new_version; then
		yes
		check "the previous session was interrupted"
		if [ -f "$ROOT_DIR/$version_number.new" ]; then
			# don't use yes() because we want it red.  Same for "no"
			printf "${bright_red}yes\n"
			rm -f $ROOT_DIR/$version_number.new
		else
			printf "${bright_green}no\n"
		fi
		new_file=true
		printf "${bright_cyan}Downloading${normal} the ${bright_yellow}latest version of${normal} ${magenta}${underline}KoLMafia${normal}..."
		rm -f $ROOT_DIR/*
		curl $download > $ROOT_DIR/$version_number.new 2>/dev/null
		finished
	else
		printf "${bright_magenta}KoLMafia is up to date!${normal}\n"
		new_file=false
	fi

fi
getcommit
printf "${version_number}\n${commitmsg}" > $VERSION_FILE
echo
printf "${bright_cyan}Running${normal} ${magenta}${underline}KoLMafia${normal}.\n"
if $new_file; then mv $ROOT_DIR/$version_number.new $ROOT_DIR/$version_number; fi
java -jar $ROOT_DIR/$version_number $@
